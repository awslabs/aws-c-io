---=== README FOR UPDATING unittests.* ca_root.* server.* certChain.crt FILES ===---


--== unittests.* files ==--

These files are used in unit tests that create TLS connections between a
localhost server and client. We use a single self-signed certificate which
serves as both the server's certificate and the client's root CA.

unittests.key:  private key, pkcs#1 syntax
unittests.crt:  self-signed certificate
unittests.conf: configuration for generating unittests.crt
unittests.p8:   private key, pkcs#8 syntax
unittests.p12:  pkcs#12 file bundling the certificate and private key. Password is "1234"

Apple won't trust any certificate whose lifetime is over 825 days.
Once it expires unit tests will start failing and it will need to be updated like so:

$ openssl req -x509 -new \
            -key unittests.key \
            -config unittests.conf \
            -out unittests.crt \
            -days 824

$ openssl pkcs8 -topk8 \
            -out unittests.p8 \
            -in unittests.key \
            -nocrypt

$ openssl pkcs12 -export \
            -out unittests.p12 \
            -inkey unittests.key \
            -in unittests.crt \
            -password pass:1234


--== ca_root.* & server.* files ==--

These files are used in unit tests that create TLS connections between a
localhost server and client. We use a root certificate authority to sign
a certificate for the server to use that the client connects to.

ca_root.crt:    ca_root CA
server.key:     server private key
server.crt:     server certificate
certChain.crt:  certificate chain containing server.crt and ca_root.crt

touch index.txt

echo 1000 > serial

openssl genrsa -out ca_root.key 2048

openssl req -config ca_root.cnf \
            -key ca_root.key \
            -new -x509 -days 824 -sha256 -extensions v3_ca \
            -out ca_root.crt \
            -set_serial 00 \
            -subj '/C=US/ST=Washington/L=Seattle/O=Amazon/OU=SDKs/CN=localhostCA/emailAddress=aws-sdk-common-runtime@amazon.com'

openssl genrsa -out server.key 2048

openssl req -new -sha256 \
            -key server.key \
            -out server.csr \
            -set_serial 02 \
            -subj '/C=US/ST=Washington/L=Seattle/O=Amazon/OU=SDKs/CN=localhost/emailAddress=aws-sdk-common-runtime@amazon.com'

openssl ca -config ca_root.cnf \
            -extensions server_cert \
            -days 824 -notext -md sha256 \
            -in server.csr \
            -out server.crt

cat server.crt ca_root.crt > certChain.crt
